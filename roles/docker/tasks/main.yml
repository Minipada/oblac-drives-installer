---
- name: Check if Docker is installed and which version
  shell: docker --version | awk '{print $3}' | sed 's/-.*//g'
  register: docker_info
  failed_when: "docker_info.stdout == ''"
  ignore_errors: yes
  no_log: True

- name: Install packages to allow apt to use a repository over HTTPS
  apt:
    name: "{{ item }}"
    update_cache: yes
  with_items:
    - apt-transport-https
    - ca-certificates
    - curl
    - software-properties-common
  when: (docker_info.failed) or (docker_info.stdout is version_compare(required_docker_version,'<'))

- name: Add Docker official GPG key
  apt_key:
    url: "https://download.docker.com/linux/ubuntu/gpg"
  when: (docker_info.failed) or (docker_info.stdout is version_compare(required_docker_version,'<'))

- name: Add Docker APT repository
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu "{{ ansible_distribution_release }}" stable
  when: (docker_info.failed) or (docker_info.stdout is version_compare(required_docker_version,'<'))

- name: Install Docker CE
  apt:
    name: docker-ce
  when: (docker_info.failed) or (docker_info.stdout is version_compare(required_docker_version,'<='))
  register: docker_ce_install
  ignore_errors: yes

- name: Install docker.io
  apt:
    name: docker.io
  when: docker_ce_install.failed

- name: Add the current user to docker group
  user:
    name: "{{ ansible_user_id }}"
    groups: docker
    append: yes
  when: (docker_info.failed) or (docker_info.stdout is version_compare(required_docker_version,'<'))

- name: Pip install docker-py
  pip:
    name: docker-py
