---
- stat:
    path: /bin/ethercat 
  register: ethercat

- stat:
    path: /opt/etherlab 
  register: etherlab

- name: Git clone Etherlab_EtherCAT_Master
  git:
    repo: https://github.com/synapticon/Etherlab_EtherCAT_Master.git
    dest: /opt/Etherlab_EtherCAT_Master
    version: develop
  when:
    - not ethercat.stat.exists
    - not etherlab.stat.exists

- name: Create gitlog.h for the EtherCAT master installation
  shell: |
    echo -n "char* gitlog = \"" > master/gitlog.h
    git log | head -1 | awk '{printf "%s", substr($2,1,8)}' >> master/gitlog.h
    echo "\";" >> master/gitlog.h
  args:
    chdir: /opt/Etherlab_EtherCAT_Master
  when:
    - not ethercat.stat.exists
    - not etherlab.stat.exists

- name: Install Etherlab_EtherCAT_Master
  command: "{{ item }}"
  with_items:
    - "./bootstrap"
    - "./configure --enable-sii-assign --disable-8139too --enable-hrtimer --enable-cycles"
    - "make all modules"
    - "make modules_install install"
    - "ldconfig"
    - "depmod"
  args:
    chdir: /opt/Etherlab_EtherCAT_Master
  when:
    - not ethercat.stat.exists
    - not etherlab.stat.exists

- name: Remove cloned Etherlab_EtherCAT_Master directory
  file:
    state: absent
    path: /opt/Etherlab_EtherCAT_Master
  when:
    - not ethercat.stat.exists
    - not etherlab.stat.exists

- name: Copy EtherCAT udev rules
  copy:
    src: etc/udev/rules.d/99-EtherCAT.rules
    dest: /etc/udev/rules.d/
    owner: root
    mode: 0644
  when:
    - not ethercat.stat.exists
    - not etherlab.stat.exists

- name: Add ethercat binary to $PATH
  file:
    src: /opt/etherlab/bin/ethercat
    dest: /usr/local/bin/ethercat
    state: link
  when:
    - not ethercat.stat.exists
    - not etherlab.stat.exists

- name: EtherCAT master configuration
  command: "./ethercat-update-conf.sh {{ ethercat_interface }}"
  args:
    chdir: /opt/oblac-drives
  when:
    - not ethercat.stat.exists
    - not etherlab.stat.exists

#################### Services ####################
- name: Copy the ethercat.service systemd file
  copy:
    src: etc/systemd/system/ethercat.service
    dest: /etc/systemd/system/
    owner: root
    mode: 0644
    force: no

- lineinfile:
    path: /etc/systemd/system/ethercat.service
    regexp: '^After=network.target'
    line: 'After=network.target ethercat-update-conf.service'
  when: native is not defined

- name: Enable EtherCAT systemd service
  systemd:
    name: ethercat.service
    enabled: yes
  when: native is not defined

- name: Start ethercat.service after installation, but disable automatic start on boot
  systemd:
    name: ethercat.service
    enabled: no
    state: started
  when:
    - native is defined
    - native

- name: Copy the utility EtherCAT systemd files
  copy:
    src: "{{ item }}"
    dest: /etc/systemd/system/
    owner: root
    mode: 0644
  with_items:
    - etc/systemd/system/ethercat-update-conf.service
    - etc/systemd/system/ethercat-watchdog.service
  when: native is not defined

- name: Enable utility EtherCAT systemd services
  systemd:
    name: "{{ item }}"
    enabled: yes
    daemon_reload: yes
  with_items:
    - ethercat-update-conf.service
    - ethercat-watchdog.service
  when: native is not defined
