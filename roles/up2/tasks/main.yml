---
- name: Create a 2048-bit SSH key for user ubuntu in ~ubuntu/.ssh/id_rsa
  user:
    name: ubuntu
    generate_ssh_key: yes
    ssh_key_bits: 2048
    ssh_key_file: .ssh/id_rsa

- name: Set authorized key took from file for user ubuntu
  authorized_key:
    user: ubuntu
    state: present
    key: "{{ lookup('file', '/home/ubuntu/.ssh/id_rsa.pub') }}"

- name: Disallow password authentication for user ubuntu
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#PasswordAuthentication'
    line: 'PasswordAuthentication no'

- name: Remove all files from /etc/netplan
  shell: rm -f /etc/netplan/*

- name: Copy 99-disable-network-config.cfg to /etc/cloud/cloud.cfg.d
  copy:
    src: etc/cloud/cloud.cfg.d/99-disable-network-config.cfg
    dest: /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg

- name: Copy network configurations to /etc/systemd/network/
  copy:
    src: "{{ item }}"
    dest: /etc/systemd/network/
    owner: root
    mode: 0644
  with_fileglob:
    - etc/systemd/network/*

- name: Install WPA supplicant
  apt:
    name: wpasupplicant
    state: present

- name: Get wlan name
  command: bash -c "networkctl | awk '/wlan/ {print $2}'"
  register: wlan_name

- debug:
    msg: "wlan name is {{ wlan_name.stdout }}"

- set_fact:
    wpa_supplicant_conf: "/etc/wpa_supplicant/wpa_supplicant-{{ wlan_name.stdout }}.conf"

- stat: path="{{ wpa_supplicant_conf }}"
  register: st

- set_fact:
    uuid: "{{ ansible_date_time.iso8601_micro | to_uuid }}"
  when: not st.stat.exists

- set_fact:
    wifi_ssid: "oblac-drives-{{ uuid[:8] }}"
  when: not st.stat.exists

- debug:
    msg: "wifi ssid is {{ wifi_ssid }}"
  when: not st.stat.exists

- name: Copy WPA supplicant configuration file
  template:
    src: etc/wpa_supplicant/wpa_supplicant.conf.j2
    dest: "{{ wpa_supplicant_conf }}"
  when: not st.stat.exists

- name: Enable wlan service
  systemd:
    name: wpa_supplicant@{{ wlan_name.stdout }}.service
    state: started
    enabled: yes

- name: Disable systemd-networkd-wait-online.service
  systemd:
    name: systemd-networkd-wait-online.service
    state: stopped
    masked: yes

- name: Copy before.rules to to /etc/ufw
  copy:
    src: etc/ufw/before.rules
    dest: /etc/ufw

- name: Change the DEFAULT_INPUT_POLICY to "ACCEPT"
  lineinfile:
    path: /etc/default/ufw
    regexp: '^DEFAULT_INPUT_POLICY='
    line: 'DEFAULT_INPUT_POLICY="ACCEPT"'

- name: Change the DEFAULT_FORWARD_POLICY to "ACCEPT"
  lineinfile:
    path: /etc/default/ufw
    regexp: '^DEFAULT_FORWARD_POLICY='
    line: 'DEFAULT_FORWARD_POLICY="ACCEPT"'

- name: Enable IP forwarding in sysctl
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    sysctl_set: yes
    state: present
    reload: yes

- name: Enable IP forwarding in ufw
  lineinfile:
    path: /etc/ufw/sysctl.conf
    regexp: '^#net/ipv4/ip_forward='
    line: 'net/ipv4/ip_forward=1'

- name: Enable UFW
  ufw:
    state: enabled